import csv
class BoardItem:
    def __init__(self, name, desc, signal, direction, pad_type, top_left, top_right, bottom_right, bottom_left):
        self.name = name
        self.desc = desc
        self.signal = signal
        self.direction = direction
        self.pad_type = pad_type
        self.coords = [top_left, top_right, bottom_right, bottom_left]

activeSelectionAreasHCC = {"1": (141.0, 65.0), "2": (171.0, 65.0), "3": (198.0, 66.0), "4": (251.0, 64.0),
                           "5": (280.0, 66.0), "6": (336.0, 65.0), "7": (364.0, 63.0), "8": (411.0, 62.0),
                           "9": (447.0, 63.0), "10": (493.0, 60.0), "11": (523.0, 62.0), "12": (554.0, 60.0),
                           "13": (584.0, 63.0), "14": (616.0, 62.0), "15": (647.0, 61.0), "16": (676.0, 60.0),
                           "17": (705.0, 60.0), "18": (738.0, 63.0), "19": (764.0, 63.0), "20": (799.0, 63.0),
                           "21": (828.0, 62.0), "22": (889.0, 58.0), "23": (940.0, 59.0), "24": (969.0, 60.0),
                           "25": (1021.0, 61.0), "26": (1050.0, 61.0), "27": (1082.0, 63.0),
                           "28": (1153.0, 141.0), "29": (1151.0, 190.0), "30": (1153.0, 221.0),
                           "31": (1150.0, 273.0), "32": (1152.0, 306.0), "33": (1153.0, 330.0),
                           "34": (1152.0, 362.0), "35": (1151.0, 394.0), "36": (1156.0, 419.0),
                           "37": (1153.0, 456.0), "38": (1154.0, 484.0), "39": (1153.0, 514.0),
                           "40": (1152.0, 564.0), "41": (1153.0, 597.0), "42": (1155.0, 648.0),
                           "43": (1082.0, 720.0), "44": (1053.0, 718.0), "45": (1020.0, 720.0),
                           "46": (970.0, 718.0), "47": (942.0, 720.0), "48": (885.0, 721.0),
                           "49": (832.0, 723.0), "50": (797.0, 720.0), "51": (766.0, 717.0),
                           "52": (736.0, 717.0), "53": (704.0, 719.0), "54": (680.0, 720.0),
                           "55": (650.0, 719.0), "56": (614.0, 718.0), "57": (588.0, 716.0),
                           "58": (555.0, 718.0), "59": (522.0, 720.0), "60": (496.0, 717.0),
                           "61": (443.0, 717.0), "62": (415.0, 718.0), "63": (283.0, 725.0),
                           "64": (252.0, 723.0), "65": (200.0, 720.0), "66": (166.0, 720.0),
                           "67": (138.0, 720.0), "68": (59.0, 652.0), "69": (54.0, 597.0), "70": (55.0, 571.0),
                           "71": (56.0, 539.0), "72": (53.0, 487.0), "73": (55.0, 459.0), "74": (56.0, 408.0),
                           "75": (56.0, 378.0), "76": (55.0, 327.0), "77": (55.0, 295.0), "78": (55.0, 245.0),
                           "79": (53.0, 182.0), "80": (53.0, 130.0), "81": (270.0, 244.0), "82": (270.0, 294.0),
                           "83": (696.0, 212.0), "84": (724.0, 213.0), "85": (755.0, 214.0),
                           "86": (695.0, 566.0), "87": (727.0, 574.0), "88": (755.0, 575.0),
                           "89": (859.0, 501.0), "90": (860.0, 468.0), "91": (861.0, 442.0),
                           "92": (861.0, 405.0), "93": (861.0, 375.0), "94": (860.0, 353.0),
                           "95": (859.0, 319.0), "96": (858.0, 292.0), "97": (859.0, 260.0)}

'''
for item in activeSelectionAreasHCC:
    print("BP"  + item)
'''

locs = [[(1689.1,1363.9), (1703.9,1363.9), (1703.9,1397.5), (1689.1,1397.5)], [(1653.4,1363.9), (1668.2,1363.9), (1668.2,1397.5), (1653.4,1397.5)], [(1630.0,1360.9), (1644.8,1360.9), (1644.8,1394.5), (1630.0,1394.5)], [(1610.6,1360.9), (1625.4,1360.9), (1625.4,1394.5), (1610.6,1394.5)], [(1571.8,1363.9), (1586.6,1363.9), (1586.6,1397.5), (1571.8,1397.5)], [(1553.5,1363.9), (1568.3,1363.9), (1568.3,1397.5), (1553.5,1397.5)], [(1473.9,1362.9), (1488.7,1362.9), (1488.7,1396.5), (1473.9,1396.5)], [(1394.4,1363.9), (1409.2,1363.9), (1409.2,1397.5), (1394.4,1397.5)], [(1375.0,1363.9), (1389.8,1363.9), (1389.8,1397.5), (1375.0,1397.5)], [(1353.6,1365.0), (1368.4,1365.0), (1368.4,1398.6), (1353.6,1398.6)], [(1333.2,1365.0), (1348.0,1365.0), (1348.0,1398.6), (1333.2,1398.6)], [(1313.8,1367.0), (1328.6,1367.0), (1328.6,1400.6), (1313.8,1400.6)], [(1292.4,1366.0), (1307.2,1366.0), (1307.2,1399.6), (1292.4,1399.6)], [(1272.0,1366.0), (1286.8,1366.0), (1286.8,1399.6), (1272.0,1399.6)], [(1250.6,1365.0), (1265.4,1365.0), (1265.4,1398.6), (1250.6,1398.6)], [(1230.2,1368.0), (1245.0,1368.0), (1245.0,1401.6), (1230.2,1401.6)], [(1206.7,1366.0), (1221.5,1366.0), (1221.5,1399.6), (1206.7,1399.6)], [(1185.3,1367.0), (1200.1,1367.0), (1200.1,1400.6), (1185.3,1400.6)], [(1165.9,1367.0), (1180.7,1367.0), (1180.7,1400.6), (1165.9,1400.6)], [(1143.5,1367.0), (1158.3,1367.0), (1158.3,1400.6), (1143.5,1400.6)], [(1124.1,1367.0), (1138.9,1367.0), (1138.9,1400.6), (1124.1,1400.6)], [(1103.7,1367.0), (1118.5,1367.0), (1118.5,1400.6), (1103.7,1400.6)], [(1082.3,1366.0), (1097.1,1366.0), (1097.1,1399.6), (1082.3,1399.6)], [(1061.9,1367.0), (1076.7,1367.0), (1076.7,1400.6), (1061.9,1400.6)], [(1040.5,1368.0), (1055.3,1368.0), (1055.3,1401.6), (1040.5,1401.6)], [(1020.1,1366.0), (1034.9,1366.0), (1034.9,1399.6), (1020.1,1399.6)], [(1000.7,1366.0), (1015.5,1366.0), (1015.5,1399.6), (1000.7,1399.6)], [(978.3,1367.0), (993.1,1367.0), (993.1,1400.6), (978.3,1400.6)], [(956.9,1367.0), (971.7,1367.0), (971.7,1400.6), (956.9,1400.6)], [(937.5,1367.0), (952.3,1367.0), (952.3,1400.6), (937.5,1400.6)], [(916.1,1368.0), (930.9,1368.0), (930.9,1401.6), (916.1,1401.6)], [(895.7,1368.0), (910.5,1368.0), (910.5,1401.6), (895.7,1401.6)], [(873.2,1368.0), (888.0,1368.0), (888.0,1401.6), (873.2,1401.6)], [(852.8,1368.0), (867.6,1368.0), (867.6,1401.6), (852.8,1401.6)]]
print(len(locs))
count = 1
ASIC = {}
with open(r"D:\Users\Adam\Documents\ITkTrackingGUI\old\ASICList.csv") as csvfile:
    reader = csv.reader(csvfile)
    for row in reader:
        name = row[0]
        desc = row[6]
        signal = row[7]
        direction = row[8]
        padType = row[9]

        label = "BP" + str(count)

        if count < len(locs):
            coords = locs[count-1]
        else:
            coords = [(0,0),(0,0),(0,0),(0,0)]

        ASIC[label] = 'BoardItem(\'' + name + '\',\'' + desc + '\',\'' + signal + '\',\'' + direction + '\',\'' + padType + "\', " + str(coords) + ", \'\')"

        print("\'" + label + "\'" + ": " + ASIC[label] + ",")

        count += 1


